package com.tutorials.spring.controller;


import com.tutorials.spring.model.Student;
import com.tutorials.spring.repository.StudentRepository;
import com.tutorials.spring.ui.StudentUI;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.view.RedirectView;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/student") // This means URL's start with /demo (after Application path)
public class StudentController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private StudentRepository studentRepository;

    @GetMapping(path = "/")
    public @ResponseBody
    RedirectView index() {
        return new RedirectView(
                "home"
        );
    }


    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewStudent(@RequestParam String firstName, @RequestParam String lastName
            , @RequestParam String sex, @RequestParam String status) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Student s = new Student();
        s.setFirstName(firstName);
        s.setLastName(lastName);
        s.setSex(sex);
        s.setStatus(status);
        studentRepository.save(s);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Student> getAllstudents() {
        // This returns a JSON or XML with the users
        return studentRepository.findAll();
    }
}
